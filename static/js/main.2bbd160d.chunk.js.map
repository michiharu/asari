{"version":3,"sources":["ColorPicker.tsx","RuleBox.tsx","FirstRow.tsx","App.tsx","theme.tsx","index.tsx"],"names":["ColorPicker","props","color","setColor","disableAlpha","onChange","c","hex","RuleBox","allColors","rule","select","index","pattarn","isLeft","selectedIndex","React","useState","anchorEl","setAnchorEl","handleOpen","event","currentTarget","handleSelectColor","open","Boolean","cells","undefined","Box","py","Typography","variant","display","justifyContent","width","cellSize","length","map","colorIndex","height","bgcolor","borderRadius","IconButton","onClick","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Card","key","style","CardActionArea","FirstRow","firstRow","firstSelect","openIndex","setOpenIndex","size","pt","border","position","cursor","top","left","defaultColors","createCellRules","colors","_","concat","right","__","first","___","second","random","flattenDeep","value","createInitTwoCellRules","third","createInitThreeCellRules","r","coloringNextRow","rules","beforeRow","last","arr","find","equal","console","log","App","colorCount","setColorCount","slice","setColors","pickerIndex","setPickerIndex","coloringRules","setColoringRules","colCount","setColCount","Array","setFirstRow","i","handleSelectCellColorIndex","selected","handleClose","rows","rowCount","nextRow","push","coloringAllCell","p","maxHeight","overflow","FormControl","component","FormLabel","RadioGroup","e","countString","count","Number","nextColors","FormControlLabel","control","Radio","label","ml","flexGrow","mt","Slider","defaultValue","valueLabelDisplay","marks","min","max","onChangeCommitted","v","filter","row","theme","createMuiTheme","palette","primary","blue","secondary","pink","error","main","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.2bbd160d.chunk.js","sourcesContent":["import React from \"react\";\nimport { ChromePicker } from \"react-color\";\n\ninterface Props { color: string; setColor: (color: string) => void }\n\nexport const ColorPicker: React.FC<Props> = (props) => {\n  const { color, setColor } = props;\n  return <ChromePicker disableAlpha color={color} onChange={(c) => setColor(c.hex)} />;\n};\n","import React from \"react\";\nimport { Box, IconButton, Popover, Typography, Card, CardActionArea } from \"@material-ui/core\";\nimport PaletteIcon from \"@material-ui/icons/Palette\";\nimport { cellSize, Rule } from \"./App\";\n\ninterface Props {\n  allColors: string[];\n  rule: Rule;\n  select: (rule: Rule, selected: number) => void;\n}\n\nconst transparent = \"#0000\";\nconst blank = -1;\n\nexport default function RuleBox(props: Props) {\n  const { allColors, rule, select } = props;\n  const { index, pattarn, isLeft, selectedIndex } = rule;\n\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n\n  const handleOpen = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleSelectColor = (index: number) => () => {\n    setAnchorEl(null);\n    select(rule, index);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const cells = isLeft === undefined ? [selectedIndex] : isLeft ? [selectedIndex, blank] : [blank, selectedIndex];\n  return (\n    <Box py={1}>\n      <Typography variant=\"caption\">{`No. ${index + 1}`}</Typography>\n      <Box display=\"flex\" justifyContent=\"center\" width={cellSize * pattarn.length}>\n        {pattarn.map((colorIndex) => (\n          <Box width={cellSize} height={cellSize} bgcolor={allColors[colorIndex]} borderRadius={4} />\n        ))}\n      </Box>\n      <Box display=\"flex\" justifyContent=\"center\" width={cellSize * pattarn.length}>\n        {cells.map((colorIndex) => {\n          if (colorIndex === blank) {\n            return <Box width={cellSize} height={cellSize} bgcolor={transparent} />;\n          }\n          return (\n            <Box bgcolor={allColors[colorIndex]} borderRadius={4}>\n              <IconButton onClick={handleOpen}>\n                <PaletteIcon />\n              </IconButton>\n            </Box>\n          );\n        })}\n        <Popover\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n        >\n          <Box display=\"flex\">\n            {allColors.map((color, colorIndex) => (\n              <Card key={colorIndex} style={{ width: cellSize, height: cellSize }}>\n                <CardActionArea onClick={handleSelectColor(colorIndex)}>\n                  <Box width={cellSize} height={cellSize} bgcolor={color} />\n                </CardActionArea>\n              </Card>\n            ))}\n          </Box>\n        </Popover>\n      </Box>\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Box, Popover, Card, CardActionArea } from \"@material-ui/core\";\nimport PaletteIcon from \"@material-ui/icons/Palette\";\nimport { cellSize, size } from \"./App\";\n\ninterface Props {\n  allColors: string[];\n  firstRow: number[];\n  firstSelect: (index: number, colorIndex: number) => void;\n}\n\nexport default function FirstRow(props: Props) {\n  const { allColors, firstRow, firstSelect } = props;\n  const [openIndex, setOpenIndex] = useState<number | null>(null);\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n\n  const handleOpen = (index: number) => (event: React.MouseEvent<HTMLButtonElement>) => {\n    setOpenIndex(index);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setOpenIndex(null);\n    setAnchorEl(null);\n  };\n\n  const handleSelectColor = (colorIndex: number) => () => {\n    firstSelect(openIndex!, colorIndex);\n    setOpenIndex(null);\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <Box display=\"flex\">\n      {firstRow.map((colorIndex, index) => (\n        <Box\n          key={index}\n          width={size}\n          pt={size}\n          bgcolor={allColors[colorIndex]}\n          onClick={handleOpen(index)}\n          border=\"1px solid #fff\"\n          borderRadius={4}\n          position=\"relative\"\n          style={{ cursor: \"pointer\" }}\n        >\n          <PaletteIcon style={{ position: \"absolute\", top: 0, left: 0 }}/>\n        </Box>\n      ))}\n      <Popover\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        <Box display=\"flex\">\n          {allColors.map((color, colorIndex) => (\n            <Card key={colorIndex} style={{ width: cellSize, height: cellSize }}>\n              <CardActionArea onClick={handleSelectColor(colorIndex)}>\n                <Box width={cellSize} height={cellSize} bgcolor={color} />\n              </CardActionArea>\n            </Card>\n          ))}\n        </Box>\n      </Popover>\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\nimport _ from \"lodash\";\nimport equal from \"fast-deep-equal\";\nimport {\n  Typography,\n  Box,\n  FormControl,\n  RadioGroup,\n  FormLabel,\n  FormControlLabel,\n  Radio,\n  Card,\n  CardActionArea,\n  Popover,\n  Slider,\n} from \"@material-ui/core\";\nimport { ColorPicker } from \"./ColorPicker\";\nimport RuleBox from \"./RuleBox\";\nimport FirstRow from \"./FirstRow\";\n\nconst defaultColors = [\"#5FF7EE\", \"#D6784B\", \"#FFFFFF\"];\n\nexport const size = \"calc(100% * 1 / 20)\";\n\nexport const cellSize = 48;\n\nexport type Rule = {\n  index: number;\n  pattarn: number[];\n  isLeft?: boolean;\n  selectedIndex: number;\n};\n\nconst createInitTwoCellRules = (colors: string[]): Omit<Rule, \"index\">[] => {\n  return _(\n    [0, 1].map((right) =>\n      colors.map((__, first) =>\n        colors.map((___, second) => ({\n          pattarn: [first, second],\n          isLeft: !Boolean(right),\n          selectedIndex: _.random(0, colors.length - 1),\n        }))\n      )\n    )\n  )\n    .flattenDeep()\n    .value();\n};\n\nconst createInitThreeCellRules = (colors: string[]): Omit<Rule, \"index\">[] => {\n  return _(\n    colors.map((__, first) =>\n      colors.map((___, second) =>\n        colors.map((___, third) => ({\n          pattarn: [first, second, third],\n          selectedIndex: _.random(0, colors.length - 1),\n        }))\n      )\n    )\n  )\n    .flattenDeep()\n    .value();\n};\n\nconst createCellRules = (colors: string[]): Rule[] => {\n  return _.concat(createInitTwoCellRules(colors), createInitThreeCellRules(colors)).map((r, index) => ({\n    ...r,\n    index,\n  }));\n};\n\nconst coloringNextRow = (rules: Rule[], beforeRow: number[]): number[] => {\n  const last = beforeRow.length - 1;\n  return beforeRow.map((__, index, arr) => {\n    if (index === 0) {\n      return rules.find((r) => equal(r.pattarn, [arr[0], arr[1]]) && r.isLeft)!.selectedIndex;\n    }\n    if (index === last) {\n      return rules.find((r) => equal(r.pattarn, [arr[last - 1], arr[last]]) && r.isLeft === false)!.selectedIndex;\n    }\n    console.log(rules)\n    console.log([arr[index - 1], arr[index], arr[index + 1]])\n    return rules.find((r) => equal(r.pattarn, [arr[index - 1], arr[index], arr[index + 1]]))!.selectedIndex;\n  });\n};\n\nconst coloringAllCell = (rules: Rule[], firstRow: number[], rowCount: number): number[][] => {\n  const rows: number[][] = [];\n  let beforeRow = firstRow;\n  for (let i = 0; i < rowCount; i++) {\n    const nextRow = coloringNextRow(rules, beforeRow);\n    rows.push(nextRow);\n    beforeRow = nextRow;\n  }\n\n  return rows;\n};\n\nexport default function App() {\n  const [colorCount, setColorCount] = useState(2);\n  const [colors, setColors] = useState(defaultColors.slice(0, colorCount));\n  const [pickerIndex, setPickerIndex] = useState<number | undefined>();\n  const [coloringRules, setColoringRules] = useState<Rule[]>(createCellRules(colors));\n  const [colCount, setColCount] = useState(12);\n  const [firstRow, setFirstRow] = useState([...Array(12)].map(() => _.random(0, colors.length - 1)));\n\n  const handleColorCount = (e: any, countString: string) => {\n    const count = Number(countString);\n    setColorCount(count);\n    const nextColors = defaultColors.slice(0, count);\n    setColors(nextColors);\n    setColoringRules(createCellRules(nextColors));\n    setFirstRow(firstRow.map(c => c % nextColors.length))\n  };\n\n  const setColor = (index: number) => (color: string) => {\n    setColors(colors.map((c, i) => (i === index ? color : c)));\n  };\n\n  const handleSelectCellColorIndex = (rule: Rule, selected: number) => {\n    setColoringRules(coloringRules.map((r, i) => (i === rule.index ? { ...r, selectedIndex: selected } : r)));\n  };\n\n  const handleColCount = (e: any, v: number | number[]) => {\n    const value = v as number;\n    if (value === colCount) {\n      return;\n    }\n    if (value < colCount) {\n      setFirstRow(firstRow.filter((__, index) => index < value));\n    } else {\n      setFirstRow(firstRow.concat([...Array(value - colCount)].map(() => _.random(0, colors.length - 1))));\n    }\n    setColCount(value);\n  };\n\n  const handleFirstSelect = (index: number, colorIndex: number) => {\n    setFirstRow(firstRow.map((c, i) => (i === index ? colorIndex : c)));\n  };\n\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n\n  const handleOpen = (index: number) => (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n    setPickerIndex(index);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const rows = coloringAllCell(coloringRules, firstRow, 50);\n\n  return (\n    <div>\n      <Box display=\"flex\">\n        <Box p={2} bgcolor=\"#0001\" maxHeight=\"100vh\" style={{ overflow: \"scroll\" }}>\n          <Box>\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">色の数</FormLabel>\n              <RadioGroup value={colorCount} onChange={handleColorCount}>\n                <FormControlLabel value={2} control={<Radio />} label=\"2色\" />\n                <FormControlLabel value={3} control={<Radio />} label=\"3色\" />\n              </RadioGroup>\n            </FormControl>\n          </Box>\n\n          <Box pt={2}>\n            <Typography>色の選択</Typography>\n            <Box display=\"flex\" pt={1}>\n              {colors.map((color, index) => (\n                <Box key={index} ml={index === 0 ? 0 : 2}>\n                  <Card style={{ width: cellSize, height: cellSize }}>\n                    <CardActionArea onClick={handleOpen(index)}>\n                      <Box width={cellSize} height={cellSize} bgcolor={color} />\n                    </CardActionArea>\n                  </Card>\n                  <Popover\n                    open={Boolean(anchorEl) && index === pickerIndex}\n                    anchorEl={anchorEl}\n                    onClose={handleClose}\n                    anchorOrigin={{\n                      vertical: \"bottom\",\n                      horizontal: \"center\",\n                    }}\n                    transformOrigin={{\n                      vertical: \"top\",\n                      horizontal: \"center\",\n                    }}\n                  >\n                    <ColorPicker color={color} setColor={setColor(index)} />\n                  </Popover>\n                </Box>\n              ))}\n            </Box>\n          </Box>\n\n          <Box pt={2}>\n            <Typography>ルール</Typography>\n            {coloringRules.map((rule) => (\n              <RuleBox allColors={colors} rule={rule} select={handleSelectCellColorIndex} />\n            ))}\n          </Box>\n        </Box>\n        <Box flexGrow={1} p={2}>\n          <Typography variant=\"caption\">Elementary Cellular Automaton</Typography>\n          <Typography variant=\"h3\">アサリの模様</Typography>\n          <Box>\n            <Box pt={5}>\n              <Box mt={2} ml=\"calc(100% * 5.25 / 42 )\" width=\"calc(100% * 35.7 / 42)\">\n                <Slider\n                  defaultValue={colCount}\n                  valueLabelDisplay=\"auto\"\n                  marks\n                  min={3}\n                  max={20}\n                  onChangeCommitted={handleColCount}\n                />\n              </Box>\n            </Box>\n            <FirstRow allColors={colors} firstRow={firstRow} firstSelect={handleFirstSelect} />\n            {rows.map((row) => (\n              <Box display=\"flex\">\n                {row.map((colorIndex, index) => (\n                  <Box\n                    key={index}\n                    width={size}\n                    pt={size}\n                    bgcolor={colors[colorIndex]}\n                    border=\"1px solid #fff\"\n                    borderRadius={4}\n                  />\n                ))}\n              </Box>\n            ))}\n          </Box>\n        </Box>\n      </Box>\n    </div>\n  );\n}\n","import red from '@material-ui/core/colors/red';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { blue, pink } from '@material-ui/core/colors';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: pink,\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}